### Event Guest List Manager

https://github.com/koriMK/code-challenge-2


## About The Project

The Event Guest List Manager is a web application that helps you manage guests for your events. It allows you to:

Add guests with their names and categories

Track attendance status (Attending/Not Attending)

Remove guests from the list

Edit guest information

Persist data using localStorage

## Build With

https://img.shields.io/badge/HTML5-E34F26?style=for-the-badge&logo=html5&logoColor=white

https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&logo=css3&logoColor=white

https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black

## features

1-  Guest Management:

Add new guests with name and category

Edit existing guest information

Remove guests from the list

Toggle attendance status

2-  Categories:

Friends (blue accent)

Family (orange accent)

Colleagues (purple accent)

3-  Data Persistence:

All guests are saved to localStorage

Data persists between browser sessions

4-  Responsive Design:

Works on mobile and desktop devices

Clean, intuitive interface

## Getting Started

To get a local copy up and running, follow these simple steps.

Prerequisites
A modern web browser (Chrome, Firefox, Safari, Edge)

(Optional) A local web server for testing


## Installation

Clone the repo
Open index.html in your browser


## Usage

Enter a guest name in the input field

Select a category (Friend, Family, or Colleague)

Click "Add Guest" to add them to your list

Use the buttons to:

Toggle attendance status

Edit the guest's name

Remove the guest from the list

## Roadmap

Basic guest list functionality

Attendance status tracking

Guest categorization

Data persistence

Export guest list to CSV

Email invitations

Guest check-in system

See the open issues for a full list of proposed features and known issues.

## Contributing

Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated.

Fork the Project

Create your Feature Branch (git checkout -b feature/AmazingFeature)

Commit your Changes (git commit -m 'Add some AmazingFeature')

Push to the Branch (git push origin feature/AmazingFeature)

Open a Pull Request

## License

Distributed under the MIT License. See LICENSE for more information.

## Contact

Your Name - Joseph Mwangi  
Gmail - joseph.mwangi7.student.moringaschool.com